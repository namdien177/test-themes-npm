@use '../1-variables' as vars;

.msb-input-basic {
  display: inline-flex;
  flex-direction: column;
  gap: vars.$global-size-100;

  // RESET THE INPUT STYLES
  input,
  textarea {
    border: none;
    box-shadow: none; // Remove any shadow
    outline: none;
    background-color: transparent; // Ensure background is transparent
    color: vars.$field-color-text-filled;

    &::placeholder {
      color: vars.$field-color-text-placeholder;
      font-size: inherit;
    }
  }

  input::before,
  input::after {
    content: none; // Remove any pseudo-elements
  }

  label.input-label {
    margin: 0;
    color: vars.$label-caption-color-text-main;
    font-family: vars.$small-medium-font;
    font-weight: vars.$small-medium-weight;
    font-size: vars.$small-medium-size;
    line-height: vars.$small-medium-line-height;
    letter-spacing: vars.$small-medium-letter-spacing;

    /* Inside auto layout */
    flex: none;
    order: 0;
    flex-grow: 0;
    z-index: 0;
  }

  .input-wrapper {
    border-style: solid;
    border-width: vars.$field-size-boder-stroke;
    border-color: vars.$field-color-boder-default;
    border-radius: vars.$field-size-boder-radius;
    padding: vars.$field-size-spacing-vertical
      vars.$field-size-spacing-horizontal;
    background-color: vars.$field-color-surface-default;
    // no vars
    max-height: 104px;
    display: flex;
    align-items: center;
    gap: vars.$field-size-spacing-gap;
    position: relative;

    > .input-group {
      position: relative;
      flex: 1 1 auto;

      > input.main-input {
        width: 100%;
        height: 100%;

        color: vars.$field-color-text-filled;
        font-family: vars.$base-regular-font;
        font-size: vars.$base-regular-size;
        font-weight: vars.$base-regular-weight;
        line-height: vars.$base-regular-line-height;
        letter-spacing: vars.$base-regular-letter-spacing;
      }

      button.clear-btn {
        border: none;
        background-color: vars.$field-color-surface-default;
        border-radius: vars.$global-size-max;
        width: vars.$field-size-icon-base;
        height: vars.$field-size-icon-base;
        cursor: pointer;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        color: vars.$field-color-icon-clear;
        // TODO: font-size of the icon will be too large if we use vars.$field-size-icon-base directly
        font-size: vars.$global-size-500;

        position: absolute;
        right: 0;
        top: 50%;
        transform: translateY(-50%);
      }
    }

    &.is-readonly {
      border-color: transparent;
      padding-left: 0;
    }

    &.is-disabled {
      border-color: transparent;
      background-color: vars.$field-color-boder-default;
    }

    &.is-error:not(.is-readonly):not(.is-disabled) {
      border-color: vars.$field-color-boder-error;
    }

    &:hover:not(.is-readonly):not(.is-disabled) {
      border-color: vars.$field-color-boder-hover;
    }

    &:focus-within:not(.is-readonly):not(.is-disabled) {
      border-color: vars.$field-color-boder-hover;
    }
  }

  .hint-message {
    font-size: vars.$small-regular-size;
    font-weight: vars.$small-regular-weight;
    line-height: vars.$small-regular-line-height;
    letter-spacing: vars.$small-regular-letter-spacing;
    color: vars.$label-caption-color-text-sub;
  }

  button.msb-password-toggle {
    background: transparent;
    border: none;
    outline: none;
    cursor: pointer;
    width: vars.$field-size-icon-base;
    height: vars.$field-size-icon-base;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    transition: color 0.3s;
    color: vars.$field-color-icon-clear;
    font-size: vars.$global-size-500;
  }
}
